[{"path":"http://adrientaudiere.github.io/cati/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrien Taudiere. Author, maintainer. Cyrille Violle. Author. François Munoz. Contributor.","code":""},{"path":"http://adrientaudiere.github.io/cati/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taudiere . & Violle C. 2015. cati: R package using functional traits detect quantify multi-level community assembly processes. Ecography.","code":"@Article{,   title = {cati: an R package using functional traits to detect and quantify multi-level community assembly processes},   journal = {Ecography},   year = {2015},   author = {A. Taudiere and C. Violle},   volume = {-},   pages = {-},   doi = {10.1111/ecog.01433}, }"},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"a-r-package-to-detect-communities-assembly-processes-by-functionnal-traits","dir":"","previous_headings":"","what":"A R package to detect communities assembly processes by functionnal traits","title":"Community Assembly by Traits: Individuals and Beyond","text":"package described Ecography: cati: R package using functional traits detect quantify multi-level community assembly processes.","code":""},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"install-the-latest-versions-of-all-dependencies-from-cran","dir":"","previous_headings":"A R package to detect communities assembly processes by functionnal traits","what":"Install the latest versions of all dependencies from CRAN:","title":"Community Assembly by Traits: Individuals and Beyond","text":"","code":"install.packages(c(\"devtools\", \"e1071\", \"mice\", \"rasterVis\", \"hypervolume\", \"FD\", \"geometry\", \"vegan\", \"nlme\", \"ade4\", \"ape\"))"},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"install-catis-current-development-version-from-github","dir":"","previous_headings":"A R package to detect communities assembly processes by functionnal traits","what":"Install cati’s current development version from Github:","title":"Community Assembly by Traits: Individuals and Beyond","text":"","code":"devtools::install_github(\"adrientaudiere/cati\")"},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"install-catis-cran-version","dir":"","previous_headings":"A R package to detect communities assembly processes by functionnal traits","what":"Install cati’s cran version:","title":"Community Assembly by Traits: Individuals and Beyond","text":"","code":"install.packages(\"cati\")"},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"attach-the-package-and-you-are-ready-to-start","dir":"","previous_headings":"A R package to detect communities assembly processes by functionnal traits","what":"Attach the package and you are ready to start:","title":"Community Assembly by Traits: Individuals and Beyond","text":"’s tutorial illustrate cati package using Darwin finches data.","code":"library(cati)"},{"path":"http://adrientaudiere.github.io/cati/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite?","title":"Community Assembly by Traits: Individuals and Beyond","text":"“Taudiere, . Violle, C. (2016), cati: R package using functional traits detect quantify multi-level community assembly processes. Ecography. doi: 10.1111/ecog.01433”","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"Transform abundance data matrix individual like matrix allows use ComIndex ComIndexMulti populationnal specific traits values.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"","code":"AbToInd(traits, com, type.sp.val = \"count\")"},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"traits Individual Matrix traits traits columns. \"traits\" matrix must row names (e.g. species populationnal names). com Community data matrix species rows sites column. type.sp.val Either \"count\" \"abundance\". Use abundance values com matrix superior one. Using abundance EXPERIMENTAL. function round abundance fit count data.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"Internal function","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"list objects:  $traits Individual traits matrix $sp Vector species attributes $ind.plot Vector sites attributes","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/AbToInd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function. Transform abundance data matrix into individual like matrix. — AbToInd","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"CVNND : Coefficient variation nearest neigbourhood distance MNND : Mean nearest neigbourhood distance MinNND : Minimum nearest neigbourhood distance SDNND : Standard deviation nearest neigbourhood distance SDND : Standard deviation neigbourhood distance MND : Mean neigbourhood distance","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"","code":"CVNND(traits, div_range =  FALSE, na.rm = FALSE, scale.tr = TRUE,   method.dist = \"euclidian\")      MNND(traits, div_range =  FALSE, na.rm = FALSE, scale.tr = TRUE,    method.dist = \"euclidian\")      MinNND(traits, div_range =  FALSE, na.rm = FALSE, scale.tr = TRUE,    method.dist = \"euclidian\")      SDNND(traits, div_range =  FALSE, na.rm = FALSE, scale.tr = TRUE,    method.dist = \"euclidian\")      SDND(trait, div_range = FALSE, na.rm = FALSE)        MND(trait, div_range = FALSE, na.rm = FALSE)"},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"traits Trait vector (uni-trait metric) traits matrix (Multi-traits metric), traits column. trait Trait vector div_range metric need divided range? Default . na.rm div_range=TRUE, logical value indicating whether NA values stripped computation proceeds. scale.tr traits need scale multi-traits metric calculation? Default yes. method.dist Method calculate distance case multi-traits metric (function dist). Default euclidian.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"One value corresponding metric value.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"Aiba, M., Katabuchi, M., Takafumi, H., Matsuzaki, S.S., Sasaki, T. & Hiura, T. 2013. Robustness trait distribution metrics community assembly studies uncertainties assembly processes. Ecology, 94, 2873-2885. \tJung, Vincent, Cyrille Violle, Cedric Mondy, Lucien Hoffmann, et Serge Muller. 2010. Intraspecific variability trait-based community assembly: Intraspecific variability community assembly. Journal Ecology 98 (5): 1134-1140.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/CVNND.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation, mean, minimum and standard deviation of the nearest neigbourhood distance. — Neigbourhood distance metrics","text":"","code":"data(finch.ind)  CVNND(traits.finch[,1], na.rm = TRUE) #> [1] 49.62862 CVNND(traits.finch[,1], div_range =  TRUE, na.rm = TRUE) #> [1] 10.65975 CVNND(traits.finch, na.rm = TRUE) #> [1] 0.6326296 CVNND(traits.finch, scale.tr = FALSE, na.rm = TRUE) #> [1] 0.7362636 SDND(traits.finch[,1], na.rm = TRUE) #> [1] 0.1248847"},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"Computing moments trait distribution metrics test quantify non-random assembly communities.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"","code":"ComIndex(traits = NULL, index = NULL, nullmodels = NULL,    ind.plot = NULL, sp = NULL, com = NULL, SE = 0, namesindex = NULL,   reg.pool = NULL, SE.reg.pool = NULL, nperm = 99, printprogress = TRUE,    independantTraits = TRUE, type.sp.val = \"count\")      # S3 method for class 'ComIndex' plot(x, type = \"normal\",    col.index = c(\"red\", \"purple\", \"olivedrab3\"), add.conf = TRUE,    color.cond = TRUE, val.quant = c(0.025, 0.975), ...)        # S3 method for class 'ComIndex' print(x, ...)        # S3 method for class 'ComIndex' summary(object, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"traits Individual Matrix traits traits column (species matrix using \"com\" instead \"ind.plot\"). index vector function apply traits vectors form \"mean(x, na.rm = TRUE)\" \"range(x)\", see examples complexe functions. nullmodels vector names corresponding null models tu use index. local (1) corresponds randomization individual values within given community. regional.ind (2) corresponds randomization individual values within region, ie within dataset. value regional.pop (2sp) corresponds randomization population values (individual value replaced mean value population) within region. Finally value regional.pop.prab (2sp.prab)  mirror null model regional.pop without taking indo account species abundance. example, nullmodels = c(\"local\", \"regional.ind\"), first index calculated null model local  second index null model regional.ind. one value given, null model determined value. ind.plot Factor defining name plot (site community) individual . sp Factor defining species individual belong . com Community data matrix species (populations) rows sites column. Use ind.plot = NULL. \t\t\"traits\" matrix \"com\" matrix must number rows. SE single value vector standard errors associated traits. Especially allow handle measurement errors. used populational null model. namesindex vector names index. reg.pool Regional pool data traits. informed, traits considere regional pool. matrix need larger (rows) matrix \"traits\". Use null model regional.ind. SE.reg.pool single value vector standard errors associated traits regional pool. Use reg.pool used. Need dimension reg.pool. nperm Number permutations. NULL, observed values returned. printprogress Logical value; print progress calculation . independantTraits Logical value (default: TRUE). independantTraits true (default), traits sample independently null models, , lines matrix randomized, keeping relation (trade-) among traits. type.sp.val ind.plot = NULL. Either \"count\" \"abundance\". Use abundance one value com matrix inferior one. Using abundance EXPERIMENTAL. function round abundance fit count data. x object class ComIndex. object object class ComIndex. type Type plot. Possible type = \"simple\", \"simple_range\", \"normal\", \"barplot\" \"bytraits\". col.index Vector colors index. add.conf Logical value; Add confidence intervals . color.cond Logical value; color.cond = TRUE, color points indicate T-statistics values significatively different null model grey points different null model. val.quant Numeric vectors length 2, giving quantile calculate confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. ... additional arguments passed plot, print summary function. See plot.listofindex arguments.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"Compute statistics (e.g. mean, range, CVNND kurtosis) test community assembly using null models. \tstatistic function returns observed values related null distribution. \tfunction implement four null models keep unchanged number individual per community. \tModel local (1) corresponds randomization individual values within community. \tModel regional.ind (2) corresponds randomization individual values within region. \tModel regional.pop (2sp) corresponds randomization population values within region. \tModel regional.pop.prab (2sp.prab) corresponds randomization population values within region whitout taking account abundance. cases, models local regional.ind correspond index individual level model regional.pop regional.pop.prab index species level (aggregate variable like genus, family functionnal group). S3 method plot class listofindex: -Normal type plot means, standard deviations, ranges confidence intervals T-statistics. -Simple_range type plot means, standard deviations range T-statistics -Simple type plot T-statistics site traits mean confidence intervals traits -Barplot type plot means, standard deviations confidence intervals T-statistics barplot fashion -Bysites type plot metrics sites -Bytraits type plot metrics traits","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"object class \"ComIndex\" corresponding list lists:  $obs List observed values trait community. component list corresponds matrix containing result custom function. $null List null values trait community. component list corresponds array containing result permutations custom function. $list.index List index values related null models. Internal use function. Traits columns. $list.index.t List index values related null models. Internal use function. Traits rows. $sites_richness Number species per site. $namestraits Names traits. $traits traits data $ind.plot name plot individual $sp groups (e.g. species) individual belong $nullmodels List null models used indices. $call call function Tstats","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing metrics to test and quantify the non-random assembly of communities — ComIndex","text":"","code":"data(finch.ind)  if (FALSE) { # \\dontrun{ #Define the functions that will be calculating funct<-c(\"mean(x, na.rm = TRUE)\", \"kurtosis(x, na.rm = TRUE)\",      \"max(x, na.rm = TRUE) - min(x, na.rm = TRUE)\" )  #Test against the null model regional.ind res.finch.sp_regional.ind<-ComIndex(traits = traits.finch, index = funct, sp = sp.finch,                            nullmodels = \"regional.ind\", ind.plot = ind.plot.finch,                             nperm = 9, print = FALSE)   #Test against the null model regional.pop #Individuals values are transformed in populational values res.finch.sp_regional.pop<-ComIndex(traits = traits.finch, index = funct, sp = sp.finch,                nullmodels = \"regional.pop\", ind.plot = ind.plot.finch,                 nperm = 9, print = FALSE)   #We can calculate index with or without intraspecific variance.  #calculate  of means by population (name_sp_site is a name of a population)  #determine the site for each population (sites_bypop)   name_sp_sites = paste(sp.finch, ind.plot.finch,sep = \"_\") traits.by.pop<-apply(traits.finch, 2 ,             function (x) tapply(x, name_sp_sites, mean, na.rm = TRUE))  sites_bypop<-lapply(strsplit(paste(rownames(traits.by.pop), sep = \"_\"), split = \"_\"),            function(x) x[3])  #New list of function \"funct\"  funct.1<-c(\"tapply(x, ind.plot.finch, function(x) mean(x, na.rm = TRUE))\",      \"tapply(x, ind.plot.finch, function(x) kurtosis(x, na.rm = TRUE))\",      \"tapply(x, ind.plot.finch, function(x) max(x, na.rm = TRUE)-min(x, na.rm = TRUE))\",       \"tapply(x, ind.plot.finch, function(x) CVNND(x, na.rm = TRUE))\" )  fact<-unlist(sites_bypop)   funct.2<-c(\"tapply(x, fact, function(x) mean(x, na.rm = TRUE))\",           \"tapply(x, fact, function(x) kurtosis(x, na.rm = TRUE))\",           \"tapply(x, fact, function(x) max(x, na.rm = TRUE)-min(x, na.rm = TRUE))\",            \"tapply(x, fact, function(x) CVNND(x, na.rm = TRUE))\")   res.finch.withIV<-ComIndex(traits = traits.finch, index = funct.1,                sp = sp.finch, nullmodels = \"regional.ind\",                ind.plot = ind.plot.finch, nperm = 9, print = FALSE)  res.finch.withoutIV<-ComIndex(traits = traits.finch, index = funct.2,                 sp = sp.finch, nullmodels = \"regional.pop\",                 ind.plot = ind.plot.finch, nperm = 9, print = FALSE)  #ComIndex class are associated to S3 methods plot, print and summary.  res.finch.withIV summary(res.finch.withIV) plot(res.finch.withIV) plot(res.finch.withoutIV)  plot(as.listofindex(list(res.finch.withIV, res.finch.withoutIV))) } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"Computing multitraits metrics test quantify non-random assembly communities","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"","code":"ComIndexMulti(traits = NULL, index = NULL, by.factor = NULL,    nullmodels = NULL, ind.plot = NULL, sp = NULL, com = NULL,   SE = 0, namesindex = NULL, reg.pool = NULL, SE.reg.pool = NULL,   nperm = 99, printprogress = TRUE, independantTraits = TRUE,    type.sp.val = \"count\")      # S3 method for class 'ComIndexMulti' plot(x, type = \"normal\",    col.index = c(\"red\", \"purple\", \"olivedrab3\"), add.conf = TRUE,    color.cond = TRUE, val.quant = c(0.025, 0.975), ...)        # S3 method for class 'ComIndexMulti' print(x, ...)        # S3 method for class 'ComIndexMulti' summary(object, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"traits Individual Matrix traits traits column (species matrix using \"com\" instead \"ind.plot\"). index vector functions apply traits vectors form \"mean(x, na.rm = TRUE)\" \"range(x)\". .factor factor split Matrix traits compute index subset eg site. nullmodels vector names corresponding null models tu use index. local (1) corresponds randomization individual values within given community. regional.ind (2) corresponds randomization individual values within region, ie within dataset. value regional.pop (2sp) corresponds randomization population values (individual value replaced mean value population) within region. Finally value regional.pop.prab (2sp.prab)  mirror null model regional.pop without taking indo account species abundance. example, nullmodels = c(\"local\", \"regional.ind\"), first index calculated null model local  second index null model regional.ind. one value given, null model determined value. ind.plot Factor defining name plot (site community) individual . sp Factor defining species individual belong . com Community data matrix species (populations) rows sites column. Use ind.plot = NULL. \t\t\"traits\" matrix \"com\" matrix must number rows. SE single value vector standard errors associated traits. Especially allow handle measurement errors. used populational null model. namesindex vector names metrics. reg.pool Regional pool data traits. informed, traits considere regional pool. matrix need larger (rows) matrix \"traits\". Use null model 2. SE.reg.pool single value vector standard errors associated traits regional pool. Use reg.pool used. Need dimension reg.pool. nperm Number permutations. NULL, observed values returned. printprogress Logical value; print progress calculation . independantTraits Logical value (default: TRUE). independantTraits true (default), traits sample independently null models, , lines matrix randomized, keeping relation (trade-) among traits. type.sp.val ind.plot = NULL. Either \"count\" \"abundance\". Use abundance values com matrix superior one. x object class ComIndexMulti. object object class ComIndexMulti. type Type plot. Possible type = \"simple\", \"simple_range\", \"normal\", \"barplot\" \"bytraits\". col.index Vector colors index. add.conf Logical value; Add confidence intervals . color.cond Logical value; color.cond = TRUE, color points indicate T-statistics values significatively different null model grey points different null model. val.quant Numeric vectors length 2, giving quantile calculate confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. ... additional arguments passed plot, print summary function creating core plot can used adjust look resulting graph. See plot.listofindex arguments.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"function implement four null models keep unchanged number individual per community. \tModel local (1) corresponds randomization individual values within community. \tModel regional.ind (2) corresponds randomization individual values within region. \tModel regional.pop (2sp) corresponds randomization population values within region. \tModel regional.pop.prab (2sp.prab) corresponds randomization population values within region whitout taking account abundance. S3 method plot class listofindex: -Normal type plot means, standard deviations, ranges confidence intervals T-statistics. -Simple_range type plot means, standard deviations range T-statistics -Simple type plot T-statistics site traits mean confidence intervals traits -Barplot type plot means, standard deviations confidence intervals T-statistics barplot fashion -Bysites type plot metrics sites -Bytraits type plot metrics traits","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"list lists:  $obs List observed values trait community. component list correspond matrix containing result custom function. $null List null values trait community. component list correspond array containing result permutations custom function. $sites_richness Number species per site. $namestraits Names traits. $traits traits data $ind.plot name plot individual $sp groups (e.g. species) individual belong $nullmodels List null models used indices. $call call function Tstats $list.index List index values associate null models. Internal use function. Traits columns. $list.index.t List index values associate null models. Internal use function. Traits rows.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/ComIndexMulti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing multitraits metrics to test and quantify the non-random assembly of communities — ComIndexMulti","text":"","code":"data(finch.ind)  if (FALSE) { # \\dontrun{ #For most multivariate functions we need to replace (or exclude) NA values.  #For this example, we use the package mice to complete the data.  comm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))  library(mice) traits = traits.finch mice<-mice(traits.finch) traits.finch.mice<-complete(mice)   #A simple example to illustrate the concept of the function ComIndexMulti  n_sp_plot<-as.factor(paste(sp.finch, ind.plot.finch, sep = \"_\"))  res.sum.1<-ComIndexMulti(traits.finch,                index = c(\"sum(scale(x), na.rm = T)\", \"sum(x, na.rm = T)\"),                by.factor = n_sp_plot, nullmodels = \"regional.ind\",                ind.plot = ind.plot.finch, nperm = 9, sp = sp.finch) res.sum.1    #A more interesting example using the function hypervolume library(hypervolume)  hv<-hypervolume(traits.finch.mice,          samples.per.point = 10) plot(hv)  hv.1<-ComIndexMulti(traits.finch.mice,               index = c(\"as.numeric(try(hypervolume(na.omit(x), samples.per.point = 10)@Volume))\"),              by.factor = rep(1,length(n_sp_plot)), nullmodels = \"regional.ind\",              ind.plot = ind.plot.finch, nperm = 9, sp = sp.finch)   hv.1  } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"Compute 3 functional diversity indices (multi-traits) presented Villeger et al. 2008 (Ecology 89 2290-2301): Functional richness (FRic), Functional evenness (FEve), Functional divergence (FDiv)","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"","code":"Fred(traits, ind.plot)"},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"traits Individual Matrix traits traits columns. NA allowed . ind.plot Factor defining name plot individual .","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"list 4 vectors values indices sites $nbind number individuals $FRic functional richness index $FEve functional evenness index $FDiv functional divergence index","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"trait, values standardized (mean=0 standard deviation=1) \tFRic computation, number individuals must higher number traits","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"Sebastien Villeger sligthy modified Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/Fred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional richness, evenness and divergence following Villeger et al. 2008 — Fred","text":"","code":"data(finch.ind) if (FALSE) { # \\dontrun{ #For most multivariate functions we need to replace (or exclude) NA values.  #For this example, we use the package mice to complete the data.  comm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))  library(mice) traits = traits.finch mice<-mice(traits.finch) traits.finch.mice<-complete(mice) fred<-Fred(traits.finch.mice, ind.plot.finch) } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/IndexByGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply metrics to groups. — IndexByGroups","title":"Apply metrics to groups. — IndexByGroups","text":"Transforme list metrics apply groups, typically populations.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/IndexByGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply metrics to groups. — IndexByGroups","text":"","code":"IndexByGroups(metrics, groups)"},{"path":"http://adrientaudiere.github.io/cati/reference/IndexByGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply metrics to groups. — IndexByGroups","text":"metrics vector metrics like argument \"index\" function ComIndex groups Name factor apply metrics groups form \"pop\", e.g. population","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/IndexByGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply metrics to groups. — IndexByGroups","text":"vector transformed metrics","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/IndexByGroups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply metrics to groups. — IndexByGroups","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"Ratio shortest distance longest distance minimum spanning tree.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"","code":"MinMaxMST(traits, gower.dist = TRUE, scale.tr = TRUE, method.dist = \"euclidian\")"},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"traits Traits matrix (traits column) gower.dist Calculate gower distance using function gowdis package FD. scale.tr traits need scale multi-traits metric calculation? use gower.dist = FALSE. Default yes. method.dist Method calculate distance case multi-traits metric (function dist). use gower.dist = FALSE. Default euclidian.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"value ratio shortest distance longest distance minimum spanning tree.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"Stubbs, WJ., Wilson, JB. 2004. Evidence limiting similarity sand dune community. Journal Ecology 92: 557-567. \tAiba, M., Katabuchi, M., Takafumi, H., Matsuzaki, S.S., Sasaki, T. & Hiura, T. 2013. Robustness trait distribution metrics community assembly studies uncertainties assembly processes. Ecology, 94, 2873-2885.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"Aiba et al., 2013 modified Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/MinMaxMST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratio of the shortest distance to the longest distance in a minimum spanning tree — MinMaxMST","text":"","code":"if (FALSE) { # \\dontrun{    data(finch.ind)      MinMaxMST(traits.finch[1:10,])   MinMaxMST(traits.finch[1:10,], gower.dist = FALSE)   MinMaxMST(traits.finch[1:10,], gower.dist = FALSE, scale.tr = FALSE) } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"Calcul p-value object class Tstats, ComIndex, ComIndexMulti listofindex. \ttest equates finding quantile exp obs found (one-tailed test).","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"","code":"Pval(x, na.rm = TRUE)"},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"x object class Tstats, ComIndex, ComIndexMulti listofindex. na.rm logical value indicating whether NA values stripped computation proceeds.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"list p-value metrics, traits grouping needed (e.g. sites)","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcul of p-value for object of class Tstats, ComIndex, ComIndexMulti and listofindex — Pval","text":"","code":"data(finch.ind) res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9, print = FALSE) #> Warning: This function exclude 1137 Na values   if (FALSE) { # \\dontrun{     Pval(res.finch)   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":null,"dir":"Reference","previous_headings":"","what":"Toy model to simulate internal and/or external filtering — RandCom","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"Toy model simulate internal /external filtering","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"","code":"RandCom(Ncom = 10, Nsp = 20, Nind.com = 100, sdlog = 1.5,    min_value_traits = 80, max_value_traits = 200,    cv_intra_sp = 1.5, cv_intra_com = 1.5,    Int_Filter_Strength = 50, Ext_Filter_Strength = 50, Filter=\"None\")"},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"Ncom Number communities (sites). Nsp Number species regional scale. Nind.com Number individuals communities. sdlog Parameter log normal distribution species abundances distribution within communities. min_value_traits Minimum mean value traits distributions. max_value_traits Maximum mean value traits distributions. cv_intra_sp Coefficient variation intra-specific distributions. value high less internal filtering. Used trait 1 (normally distributed). cv_intra_com Coefficient variation intra-community distributions. value high less external filtering. Used trait 1 (normally distributed) Int_Filter_Strength Strength internal filtering percentage. Use addition cv_intra_sp distributing mean species trait less evenly. extreme case (Int_Filter_Strength==100), species equally distributed mean values along trait gradient. Ext_Filter_Strength Strength external filtering percentage. Use addition cv_intra_com distributing mean communities trait less evenly. extreme case (Ext_Filter_Strength==100), communities equally distributed mean values along trait gradient. Filter type filter simulate. Either \"None\", \"Internal\", \"External\" \"\"","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"version function, trait 1 follows normal distribution wheras trait 2 follows uniform distribution.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"$data$com Vector simulated communities individual. $data$sp Vector simulated species individual. $data$trait1 Vector simulated value trait 1: normally distributed. $data$trait2 Vector simulated value trait 2: normally distributed. $call call function Tstats","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"Cecile Albert Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RandCom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Toy model to simulate internal and/or external filtering — RandCom","text":"","code":"res <- RandCom()"},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"Rao function computes alpha, gamma beta-components taxonomic, functional phylogenetic diversity Rao index. script integrates two functions: \"Qdecomp\", Villeger et Mouillot (J Ecol, 2008) modified Wilfried Thuiller, \"disc\", S. Pavoine, package ade4. regional assemblage C local communities gamma = mean(alpha) + beta, : gamma diversity regional pool, alpha diversity local community beta turn local communities diversity estimated Rao quadratic entropy index (Rao 1982)","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"","code":"RaoRel(sample, dfunc, dphyl, weight = FALSE, Jost = FALSE,    structure = NULL)"},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"sample Community matrix abundance (c x s) s species c local communities. dfunc matrix (s x s) dist object pairwise functional trait distances s species dphyl dfunct phylogenetic distances weight Defining correction Villeger & Mouillot (J Ecol, 2008) applied Jost Defining Jost correction applied (Jost 2007) structure data frame containing name group samples belong see de Bello et al, 2011 details.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"NA automatically replaced 0 \"sample\". function use function \"Qdecomp\" Sebastien Villeger & David Mouillot (J Ecol, 2008) modified Wilfried Thuiller function disc originally proposed Sandrine Pavoine.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"results organized Taxonomic diversity ($TD), Functional diversity ($FD) phylogenetical diversity ($PD). Beta gamma diversities calculated whole data set pair samples (\"Pairwise_samples\"): $Richness_per_plot(number species per sample) $Relative_abundance (species relative abundances per plot) $Pi (species regional relative abundance) $Wc (weigthing factor), $Mean_Alpha (mean aplpha diversity; taxonomic diversity Simpson index calculated) $Alpha (alpha diversity sample; taxonomic diversity Simpson index calculated) $Gamma (gamma diversity; taxonomic diversity Simpson index calculated) $Beta_add (Gamma-Mean_Alpha) $Beta_prop (Beta_add*100/Gamma) $Pairwise_samples$Alpha (mean alpha pair samples) $Pairwise_samples$Gamma (gamma pair samples) $Pairwise_samples$Beta_add (beta pair samples Gamma-Mean_Alpha) $Pairwise_samples$Beta_prop (beta pair samples Beta_add*100/Gamma)","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"De Bello, Francesco, Sandra Lavorel, Cecile H. Albert, Wilfried Thuiller, Karl Grigulis, Jiri Dolezal, stepan Janecek, et Jan Leps. 2011. Quantifying relevance intraspecific trait variability functional diversity: Intraspecific variability functional diversity. Methods Ecology Evolution 2: 163-174.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/RaoRel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Alpha, gamma and beta-components for taxonomic, functional and phylogenetic diversity — RaoRel","text":"Francesco De Bello et al., 2011 modified Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"Sum branch length classification dendrogram (Petchey Gaston, 2002)","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"","code":"SumBL(traits, gower.dist = TRUE, method.hclust = \"average\",    scale.tr = TRUE, method.dist = \"euclidian\")"},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"traits Traits matrix (traits column) gower.dist Calculate gower distance using function gowdis package FD. method.hclust Define method hclust function (default \"average\" .e. UPGMA). scale.tr traits need scale multi-traits metric calculation? use gower.dist = FALSE. Default yes. method.dist Method calculate distance case multi-traits metric (function dist). use gower.dist = FALSE. Default euclidian.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"value sum branch length classification dendrogram traits.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"Petchey, OL., Gaston, KJ. 2002. Functional diversity (FD), species richness community composition. Ecology Letters 5:402-411","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/SumBL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum of branch length of a classification dendrogram (Petchey and Gaston, 2002) — SumBL","text":"","code":"if (FALSE) { # \\dontrun{  data(finch.ind) SumBL(traits.finch) SumBL(traits.finch, gower.dist = FALSE)  } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"Computing observed T-statistics (T Traits) three ratios variance, namely T_IP.IC, T_IC.IR T_PC.PR. function can also return distribution three statistics null models.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"","code":"Tstats(traits, ind.plot, sp, SE = 0, reg.pool = NULL,    SE.reg.pool = NULL, nperm = 99, printprogress = TRUE,    independantTraits = TRUE)      sum_Tstats(x, val.quant = c(0.025, 0.975), type = \"all\")      ses.Tstats(x, val.quant = c(0.025, 0.975))        # S3 method for class 'Tstats' barplot(height, val.quant = c(0.025, 0.975),    col.index = c(\"red\", \"purple\", \"olivedrab3\", \"white\"), ylim = NULL, ...)                     # S3 method for class 'Tstats' plot(x, type = \"normal\", col.index = c(\"red\", \"purple\", \"olivedrab3\"),   add.conf = TRUE, color.cond = TRUE, val.quant = c(0.025, 0.975), ...)        # S3 method for class 'Tstats' print(x, ...)        # S3 method for class 'Tstats' summary(object, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"traits Individual Matrix traits traits columns. one trait, use .matrix(). ind.plot Factor defining name plot individual . sp Factor defining species individual belong . SE single value vector standard errors associated traits. Especially allow handle measurement errors. used populational null model. reg.pool Regional pool data traits. informed, 'traits' considered regional pool. matrix need larger (rows) matrix \"traits\". Use null model 2 (regional.ind). SE.reg.pool single value vector standard errors associated traits regional pool. Use reg.pool used. Need dimension reg.pool.  nperm Number permutations. NULL, observed values returned; printprogress Logical value; print progress calculation . independantTraits Logical value (default: TRUE). independantTraits true (default), traits sample independently null models, , lines matrix randomized, keeping relation (trade-) among traits. x object class Tstats. height object class Tstats. object object class Tstats. val.quant Numeric vectors length 2, giving quantile calculation confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. ylim Numeric vectors length 2, giving y coordinates range col.index vector three color correspond three T-statistics. color.cond Logical value; color.cond = TRUE, color points indicate T-statistics values significatively different null model grey points different null model. type plot function, type plot. Possible type = \"simple\", \"simple_range\", \"normal\", \"barplot\" \"bytraits\". \t\tsummary function, type summary statistics. Either \"binary\", \"percent\", \"p.value\", \"site\" \"\". add.conf Logical value; Add confidence intervals . ... additional arguments passed plot function creating core plot can used adjust look resulting graph. See plot.listofindex arguments.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"S3 method plot: -Normal type plot means, standard deviations, ranges confidence intervals T-statistics. -Simple_range type plot means, standard deviations range T-statistics -Simple type plot T-statistics site traits mean confidence intervals traits -Barplot type plot means, standard deviations confidence intervals T-statistics barplot fashion -Bysites type plot metrics sites -Bytraits type plot metrics traits S3 method print: print structure object class Tstats S3 method summary: print summary statistics three T-statistics Method summary sum_Tstats: -Binary type test T-statistics significatively different null expectation trait. -Percent type determine percentage sites T-statistics significatively different null expectation trait. Asterix shows global significance test. -P-value type determine p-value (two unilateral tests) T-statistics trait sites. -Site type allows know sites T-statistics deviate null expectation. -type precedent type summary.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"list statistics:  Tstats$T_IP.IC Observed ratio variance individuals populations individuals communities Tstats$T_IC.IR Observed ratio variance individuals communities individuals region Tstats$T_PC.PR Observed ratio variance populations communities populations region $Tstats$T_IP.IC_nm nperm numeric; Result simulation T_IP.IC $Tstats$T_IC.IR_nm nperm numeric; Result simulation T_IC.IR $Tstats$T_PC.PR_nm nperm numeric; Result simulation T_PC.PR $variances$var_IP variance individuals within populations $variances$var_PC variance populations within communities $variances$var_CR variance communities within region $variances$var_IC variance individuals within communities $variances$var_PR variance populations within region $variances$var_IR variance individuals within region $variances$var_IP_nm1 variance individuals within populations null model 1 $variances$var_PC_nm2sp variance populations within communities null model 2sp $variances$var_IC_nm1 variance communities within region null model 1 $variances$var_IC_nm2 variance individuals within communities null model 2 $variances$var_PR_nm2sp variance populations within region null model 2sp $variances$var_IR_nm2 variance individuals within region null model 2 $traits traits data $ind.plot name plot individual $sp groups (e.g. species) individual belong $call call function Tstats","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"Violle, Cyrille, Brian J. Enquist, Brian J. McGill, Lin Jiang, Cecile H. Albert, Catherine Hulshof, Vincent Jung, et Julie Messier. 2012. return variance: intraspecific variability community ecology. Trends Ecology & Evolution 27 (4): 244-252. doi:10.1016/j.tree.2011.11.014.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"Adrien Taudiere Cyrille Violle","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/Tstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing observed T-statistics (T for Traits) and null expectations. — Tstats","text":"","code":"data(finch.ind)    if (FALSE) { # \\dontrun{   res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9, print = FALSE)      res.finch    #Tstats class is associated to S3 methods plot, barplot and summary      plot(res.finch)         plot(res.finch, type = \"simple\")   plot(res.finch, type = \"simple_range\")   plot(res.finch, type = \"barplot\")   plot(res.finch, type = \"bysites\")   plot(res.finch, type = \"bytraits\")       sum_Tstats(res.finch, type = \"binary\")   sum_Tstats(res.finch, type = \"site\")   sum_Tstats(res.finch, type = \"p.value\")    barplot(res.finch)      #### An other way to see \"ses values\" of T-statistics      # Custom theme (from rasterVis package)   require(rasterVis)      my.theme <- BuRdTheme()   # Customize the colorkey   my.ckey <- list(col = my.theme$regions$col)      levelplot(t(ses(res.finch$Tstats$T_IP.IC,res.finch$Tstats$T_IP.IC_nm)$ses),    colorkey = my.ckey, par.settings = my.theme,border = \"black\")      #### Use a different regional pool than the binding of studied communities   #create a random regional pool for the example      reg.p <- rbind(traits.finch, traits.finch[sample(1:2000,300), ])      res.finch2 <- Tstats(traits.finch, ind.plot = ind.plot.finch,       sp = sp.finch, reg.pool=reg.p, nperm = 9, print = FALSE)            plot(as.listofindex(list(res.finch,res.finch2)))      #### Use a different regional pool for each communities   #create a random regional pool for each communities for the example      list.reg.p <- list(   traits.finch[sample(1:290,200), ], traits.finch[sample(100:1200,300), ],    traits.finch[sample(100:1500, 1000), ], traits.finch[sample(300:800,300), ],   traits.finch[sample(1000:2000, 500), ], traits.finch[sample(100:900, 700), ] )    # Warning: the regional pool need to be larger than the observed communities   table(ind.plot.finch)   # For exemple, the third community need a regional pool of more than 981 individuals        res.finch3 <- Tstats(traits.finch, ind.plot = ind.plot.finch,       sp = sp.finch, reg.pool=list.reg.p, nperm = 9, print = FALSE)            plot(as.listofindex(list(res.finch, res.finch2, res.finch3)))      #### Use the standard errors of measure in the analysis (argument SE)   res.finch.SE0 <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, SE = 0, print = FALSE)        res.finch.SE5 <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, SE = 5, print = FALSE)      plot(as.listofindex(list(res.finch.SE0, res.finch.SE5)))   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform index results in a list of index — as.listofindex","title":"Transform index results in a list of index — as.listofindex","text":"Transform various results functions Tstats, ComIndex ComIndexMulti list index. Useful use functions plot.listofindex (S3 method) ses.listofindex.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform index results in a list of index — as.listofindex","text":"","code":"as.listofindex(x, namesindex = NULL)"},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform index results in a list of index — as.listofindex","text":"x list objects class Tstats, ComIndex ComIndexMulti namesindex Optionnal, names index order x.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform index results in a list of index — as.listofindex","text":"list observed values corresponding \"null\" values (.e. produced null models) form \"list(index1, null model index1, index2, null model index2 ...)\"","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform index results in a list of index — as.listofindex","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/as.listofindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform index results in a list of index — as.listofindex","text":"","code":"data(finch.ind)    res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9, print = FALSE) #> Warning: This function exclude 1137 Na values    if (FALSE) { # \\dontrun{     #### Use a different regional pool than the binding of studied communities     #create a random regional pool for the example        reg.p <- rbind(traits.finch, traits.finch[sample(1:2000,300), ])        res.finch2 <- Tstats(traits.finch, ind.plot = ind.plot.finch,        sp = sp.finch, reg.pool=reg.p, nperm = 9, print = FALSE)                plot(as.listofindex(list(res.finch,res.finch2)))                 #### Use a different regional pool for each communities     #create a random regional pool for each communities for the example     list.reg.p <- list(     traits.finch[sample(1:290,200), ], traits.finch[sample(100:1200,300), ],      traits.finch[sample(100:1500, 1000), ], traits.finch[sample(300:800,300), ],     traits.finch[sample(1000:2000, 500), ], traits.finch[sample(100:900, 700), ] )      # Warning: the regional pool need to be larger than the observed communities     table(ind.plot.finch)     # For exemple, the third community need a regional pool of more than 981 individuals          res.finch3 <- Tstats(traits.finch, ind.plot = ind.plot.finch,        sp = sp.finch, reg.pool=list.reg.p, nperm = 9, print = FALSE)                plot(as.listofindex(list(res.finch, res.finch2, res.finch3)))     } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance partitioning for multiple traits — decompCTRE","title":"Variance partitioning for multiple traits — decompCTRE","text":"function decomposes variation community trait composition three sources: () intraspecific trait variability, (ii) \tvariability due species turnover (iii) covariation also separated. decomposition computed whole variation trait \tvalues , formula specified, across contribution various explanatory variables considered model. Barplot.decompCTRE allow plot result decomposition.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance partitioning for multiple traits — decompCTRE","text":"","code":"decompCTRE(traits = NULL, formula = ~1, ind.plot = NULL, sp = NULL,    printprogress = TRUE, ...)      # S3 method for class 'decompCTRE' barplot(height, resume = TRUE, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance partitioning for multiple traits — decompCTRE","text":"traits Matrix traits traits column height object class decompCTRE obtain function decompCTRE. formula formula parameter must one-sided formula, .e. starting tilde (~) character. response variable specified next two arguments, specif.avg const.avg. default set ~1. ind.plot Factor defining name plot (site community) individual . sp Factor defining species individual belong . printprogress Logical value; print progress calculation . resume Logical. resume = FALSE, plot one graphic traits. ... Optional additional arguments","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance partitioning for multiple traits — decompCTRE","text":"object class \"decompCTRE\".","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance partitioning for multiple traits — decompCTRE","text":"Leps, Jan, Francesco de Bello, Petr Smilauer Jiri Dolezal. 2011. Community trait response environment: disentangling species turnover vs intraspecific trait variability effects. Ecography 34 (5): 856-863.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance partitioning for multiple traits — decompCTRE","text":"Adrien Taudiere \tJan Leps","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/decompCTRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance partitioning for multiple traits — decompCTRE","text":"","code":"data(finch.ind) if (FALSE) { # \\dontrun{   res.decomp <- decompCTRE(traits = traits.finch, sp = sp.finch,    ind.plot = ind.plot.finch, print = FALSE)    barplot.decompCTRE(res.decomp)    par(mfrow = c(2,2))   barplot.decompCTRE(res.decomp, resume = FALSE)   par(mfrow = c(1,1))   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Finch morphological data — finch.ind","title":"Finch morphological data — finch.ind","text":"Individual morphological data Darwin\"s finches. finch data.frame. ind.plot.finch sp.finch respectively correspond Ilsland species attribute individual. traits.finch matrix traits four traits rows 2677 individuals columns.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finch morphological data — finch.ind","text":"","code":"data(finch.ind)"},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Finch morphological data — finch.ind","text":"http://bioquest.org/birdd/morph.php","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Finch morphological data — finch.ind","text":"data.frame 2677 individuals rows 14 columns.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finch morphological data — finch.ind","text":"See http://bioquest.org/birdd/morph.php information database.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/finch.ind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finch morphological data — finch.ind","text":"","code":"data(finch.ind)"},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance partitioning accross nested scales — partvar","title":"Variance partitioning accross nested scales — partvar","text":"Variance partitioning accross nested scales using decomposition (varcomp function) variance restricted maximum likelihood (REML) method (lme function). See Messier et al. 2010 information. barPartvar piePartvar associated plotting functions.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance partitioning accross nested scales — partvar","text":"","code":"partvar(traits, factors, printprogress = TRUE)   barPartvar(partvar, col.bar = NA, ...)   piePartvar(partvar, col.pie = NA, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance partitioning accross nested scales — partvar","text":"traits Matrix traits traits column factors matrix factors first column corresponds higher level factor, second row second higher level factor . printprogress Logical value; print progress calculation . partvar result partvar function. col.bar Vector colors bars ... additional arguments passed pie function. col.pie Vector color pie.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance partitioning accross nested scales — partvar","text":"object class \"partvar\" corresponding matrix variance values traits rows nested factors column.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance partitioning accross nested scales — partvar","text":"Messier, Julie, Brian J. McGill, et Martin J. Lechowicz. 2010. traits vary across ecological scales? case trait-based ecology: traits vary across ecological scales? Ecology Letters 13(7): 838-848. doi:10.1111/j.1461-0248.2010.01476.x.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance partitioning accross nested scales — partvar","text":"Adrien Taudiere \tJulie Messier","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/partvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance partitioning accross nested scales — partvar","text":"","code":"data(finch.ind)   if (FALSE) { # \\dontrun{   cond<-seq(1,length(sp.finch)*2, by = 2)   genus <- as.vector(unlist(strsplit(as.vector(sp.finch),\"_\"))[cond])    res.partvar.finch <- partvar(traits = traits.finch,    factors = cbind(sites = as.factor(as.vector(ind.plot.finch)),    species = as.factor(as.vector(sp.finch)), genus = as.factor(genus)))      res.partvar.finch      oldpar<-par()   par(mfrow = c(2,2), mai = c(0.2,0.2,0.2,0.2))   piePartvar(res.partvar.finch)   par(oldpar)      barPartvar(res.partvar.finch)   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot community assembly index — plot.listofindex","title":"Plot community assembly index — plot.listofindex","text":"Plot community assembly index confidence intervals using list index. S3 method class listofindex.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot community assembly index — plot.listofindex","text":"","code":"# S3 method for class 'listofindex' plot(x, type = \"normal\",    col.index = c(\"red\", \"purple\", \"olivedrab3\"), add.conf = TRUE,    color.cond = TRUE, val.quant = c(0.025, 0.975),    grid.v = TRUE, grid.h = TRUE, xlim = NULL, ylim = NULL,    cex.text = 0.8, plot.ask = FALSE, srt.text = 90, alpha = 0.4, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot community assembly index — plot.listofindex","text":"x list index related null models obtained .listofindex function. type Type plot. Possible type = \"simple\", \"simple_range\", \"normal\", \"barplot\" \"bytraits\". col.index Vector colors index. add.conf Logical value; Add confidence intervals . color.cond Logical value; color.cond = TRUE, color points indicate T-statistics values significatively different null model grey points different null model. val.quant Numeric vectors length 2, giving quantile calculate confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. grid.v Logical value; print vertical grid grid.h Logical value; print horizontal grid xlim Numeric vectors length 2, giving x coordinates range ylim Numeric vectors length 2, giving y coordinates range cex.text Numeric value; magnification used text relative current setting cex plot.ask Logical value; ask plotting next plot . srt.text Degree rotation text. alpha Degree transparency null models aera. ... additional arguments passed plot function creating core plot can used adjust look resulting graph.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot community assembly index — plot.listofindex","text":"S3 method plot class listofindex: \t-Normal type plot means, standard deviations, ranges confidence intervals T-statistics. \t-Simple_range type plot means, standard deviations range T-statistics \t-Simple type plot T-statistics site traits mean confidence intervals traits \t-Barplot type plot means, standard deviations confidence intervals T-statistics barplot fashion \t-Bysites type plot metrics sites \t-Bytraits type plot metrics traits","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot community assembly index — plot.listofindex","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot community assembly index — plot.listofindex","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plot.listofindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot community assembly index — plot.listofindex","text":"","code":"data(finch.ind)    res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9, print = FALSE) #> Warning: This function exclude 1137 Na values    if (FALSE) { # \\dontrun{     #### Use a different regional pool than the binding of studied communities     #create a random regional pool for the example        reg.p <- rbind(traits.finch, traits.finch[sample(1:2000,300), ])        res.finch2 <- Tstats(traits.finch, ind.plot = ind.plot.finch,        sp = sp.finch, reg.pool=reg.p, nperm = 9, print = FALSE)                plot(as.listofindex(list(res.finch,res.finch2)))                 #### Use a different regional pool for each communities     #create a random regional pool for each communities for the example     list.reg.p <- list(     traits.finch[sample(1:290,200), ], traits.finch[sample(100:1200,300), ],      traits.finch[sample(100:1500, 1000), ], traits.finch[sample(300:800,300), ],     traits.finch[sample(1000:2000, 500), ], traits.finch[sample(100:900, 700), ] )      # Warning: the regional pool need to be larger than the observed communities     table(ind.plot.finch)     # For exemple, the third community need a regional pool of more than 981 individuals          res.finch3 <- Tstats(traits.finch, ind.plot = ind.plot.finch,        sp = sp.finch, reg.pool=list.reg.p, nperm = 9, print = FALSE)                plot(as.listofindex(list(res.finch, res.finch2, res.finch3)))     } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the bivariate relationships between T-statistics — plotCorTstats","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"Plot bivariate relationships three T-statistics namely T_IP.IC, T_IC.IR T_PC.PR.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"","code":"plotCorTstats(tstats = NULL, val.quant = c(0.025, 0.975),    add.text =  FALSE, bysite =  FALSE, col.obj = NULL, plot.ask = TRUE,    multipanel = TRUE, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"tstats list resulting function Tstats. val.quant Numeric vector length 2, giving quantile calculate confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. add.text Logical value; Add text . bysite Logical value; plot per site traits. col.obj Vector colors object (either traits sites). plot.ask Logical value; Ask new plot . multipanel Logical value. TRUE divides device shown several traits graphics device. ... additional arguments passed plot function creating core plot can used adjust look resulting graph.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotCorTstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the bivariate relationships between T-statistics — plotCorTstats","text":"","code":"data(finch.ind)   res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9) #> Warning: This function exclude 1137 Na values #> [1] \"creating null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\" #> [1] \"calculation of Tstats using null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\"      if (FALSE) { # \\dontrun{     plotCorTstats(res.finch, bysite = FALSE)     plotCorTstats(res.finch, bysite = TRUE)   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function to represent density of trait values — plotDistri","title":"Plot function to represent density of trait values — plotDistri","text":"Plot function represent density trait values","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function to represent density of trait values — plotDistri","text":"","code":"plotDistri(traits = NULL, var.1 = NULL, var.2 = NULL, col.dens = NULL,    plot.ask = TRUE, ylim.cex = 1, cex.leg = 0.8, polyg = TRUE,    multipanel = TRUE, leg = TRUE, xlim = NULL, ylim = NULL,    main = \"default\", ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function to represent density of trait values — plotDistri","text":"traits Matrix traits traits column. var.1 first variable defines division plots, case either vector species name sites. var.2 second variable define division color, case either vector species name sites. col.dens vector colors second variable. plot.ask Logical value; ask plotting next plot . ylim.cex Numeric value; magnification used range y axe cex.leg Numeric value; magnification used legend relative current setting cex polyg Logical value; mean distribution full empty multipanel Logical value. TRUE divides device shown several traits graphics device. leg Logical value; TRUE print legend. ylim Numeric vectors length 2, giving y coordinates range xlim Numeric vectors length 2, giving y coordinates range main Title plot. Default set automatic title using informations input dataset. ... additional arguments passed plot function creating core plot can used adjust look resulting graph.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function to represent density of trait values — plotDistri","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot function to represent density of trait values — plotDistri","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotDistri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function to represent density of trait values — plotDistri","text":"","code":"data(finch.ind)  if (FALSE) { # \\dontrun{   #Plot the distribution of trait values for populations,    #species, sites and regional scales.       ### First, let try the distribution for all populations    #of Darwin finches.      par(mfrow = c(4,4), cex = 0.5)   plotDistri(traits.finch, sp.finch, ind.plot.finch, ylim.cex = 3,    plot.ask = FALSE, multipanel = FALSE, leg = FALSE)      ### Then we can inverse the second and the third arguments    #to plot the distribution for all finches species.       par(mfrow = c(4,4), cex = 0.5)   plotDistri(traits.finch, ind.plot.finch, sp.finch, ylim.cex = 8,    plot.ask = FALSE, multipanel = FALSE, leg = FALSE)      ### Only one trait to plot using leg = TRUE to plot the legend    par(mfrow=c(2,3))   plotDistri(as.matrix(traits.finch[,1]), ind.plot.finch, sp.finch,      ylim.cex=8, plot.ask = FALSE, multipanel = FALSE, leg = TRUE, cex.leg=0.5)    ### You can also plot trait distribution for all species in the region      par(mfrow = c(1,1), cex = 1)   plotDistri(traits.finch, rep(\"region\", times = dim(traits.finch)[1]),    sp.finch, ylim.cex = 6, plot.ask = FALSE, leg = FALSE)      ### You can also plot trait distribution for all sites   #without taking into account species identity    plotDistri(traits.finch, rep(\"toutes_sp\", times = dim(traits.finch)[1]),    ind.plot.finch, ylim.cex = 3, plot.ask = FALSE)  } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot result of observed indices values against null distribution — plotRandtest","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"Function plot result observed indices values null distribution.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"","code":"plotRandtest(x, alternative = \"two-sided\", ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"x object class listofindex, ComIndex, ComIndexMulti Tstats. alternative Indicates alternative hypothesis must one \"two.sided\", \"greater\" \"less\". can specify just initial letter. \"greater\" corresponds positive association, \"less\" negative association. ... additional arguments passed plot function creating core plot can used adjust look resulting graph.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotRandtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot result of observed indices values against null distribution — plotRandtest","text":"","code":"data(finch.ind)   if (FALSE) { # \\dontrun{     res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,      sp = sp.finch, nperm = 99, print = FALSE)      par(mfrow = c(4,4))      plotRandtest(res.finch)   plotRandtest(res.finch, alter = \"less\")   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SES values against a variable — plotSESvar","title":"Plot SES values against a variable — plotSESvar","text":"Plot standardized effect size values variable","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SES values against a variable — plotSESvar","text":"","code":"plotSESvar(index.list, variable = NULL, ylab = \"variable\",    color.traits = NULL, val.quant = c(0.025, 0.975), resume = FALSE,    multipanel = TRUE)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SES values against a variable — plotSESvar","text":"index.list list index associate null models forme: list( index_1 = index_1_observed, index_1_nm = null.model.index_1 ,index_2 = index_2_observed, index_2_nm = null.model.index_2, ...). variable variable standardized effect sizes plotted. ylab Label variable. color.traits vector colors corresponding traits. val.quant Numeric vectors length 2, giving quantile calculation confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%. resume Logical value; resume = FALSE default; Simplify plot plotting mean standard error index value multiple traits multipanel Logical value. TRUE divides device shown several traits graphics device.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SES values against a variable — plotSESvar","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot SES values against a variable — plotSESvar","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotSESvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SES values against a variable — plotSESvar","text":"","code":"data(finch.ind)   res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch, sp = sp.finch,    nperm = 9) #> Warning: This function exclude 1137 Na values #> [1] \"creating null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\" #> [1] \"calculation of Tstats using null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\" if (FALSE) { # \\dontrun{   par(mfrow = c(2,2))   species.richness <- table(ind.plot.finch)   plotSESvar(as.listofindex(list(res.finch)), species.richness,    multipanel = FALSE)    #Same plot with resume = TRUE.      par(mfrow = c(2,2))   plotSESvar(as.listofindex(list(res.finch)), species.richness,    resume = TRUE, multipanel = FALSE)   par(mfrow = c(1,1))   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot populations values against species values — plotSpPop","title":"Plot populations values against species values — plotSpPop","text":"Plot populations values species values. objectif see contribution intra-specific vs inter-specific variation trait gradient.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot populations values against species values — plotSpPop","text":"","code":"plotSpPop(traits = NULL, ind.plot = NULL, sp = NULL,    col.ind = rgb(0.5, 0.5, 0.5, 0.5), col.pop = NULL, col.sp = NULL,    col.site = NULL, resume =  FALSE, p.val = 0.05, min.ind.signif = 10,    multipanel = TRUE, col.nonsignif.lm = rgb(0, 0, 0, 0.5),    col.signif.lm = rgb(1, 0.1, 0.1, 0.8), silent =  FALSE)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot populations values against species values — plotSpPop","text":"traits Individual Matrix traits traits columns. ind.plot Factor defining name plot individual . sp Factor defining species individual belong . col.ind Color individual values. col.pop Color populational mean values. col.sp Color species mean values. col.site Color sites mean values. resume Logical, TRUE plot simple form plot. p.val Choosen p.value print significant linear relationship using linear model. Argument past lm funtion internally. min.ind.signif Minimum individual print significant linear relationship. multipanel Logical value. TRUE divides device shown several traits graphics device. col.nonsignif.lm Color non significant linear relationship. col.signif.lm Color significant linear relationship. silent Logical value, resume = FALSE print warning argument.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot populations values against species values — plotSpPop","text":"Example utilisation: Cornwell, W.K., Ackerly, D.D., 2009. Community assembly shifts plant trait distributions across environmental gradient coastal California. Ecological Monographs 79, 109-126.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot populations values against species values — plotSpPop","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot populations values against species values — plotSpPop","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpPop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot populations values against species values — plotSpPop","text":"","code":"data(finch.ind)   if (FALSE) { # \\dontrun{   plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent = TRUE)    #If we change the value of the threshold    #(alpha = 10% instead of 5%    #and the minimum individual to represent significativity    #fixed to 3 instead of 10 by default)    #we can see some significant relationships.    plotSpPop(traits.finch, ind.plot.finch, sp.finch, p.val = 0.1,     min.ind.signif = 3, silent = TRUE)     #For a more simple figure, add the option resume = TRUE.    #Again if we change the value of the threshold    #(alpha = 10% instead of 5%    #and the minimum individual to represent significativity   # fixed to 3 instead of 10 by default)    #we can see some significant relationships.    plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent = TRUE,    resume = TRUE, col.pop = \"grey\")      plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent = TRUE,    resume = TRUE, col.pop = \"grey\", col.sp = \"black\")      plotSpPop(traits.finch, ind.plot.finch, sp.finch, silent = TRUE,    resume = TRUE, col.pop = \"grey\", col.sp = \"black\",    p.val = 0.1,  min.ind.signif = 3)   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot populations values against species values — plotSpVar","title":"Plot populations values against species values — plotSpVar","text":"Plot populations values species values. objectif see contribution intra-specific vs inter-specific variation trait gradient.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot populations values against species values — plotSpVar","text":"","code":"plotSpVar(traits = NULL, ind.plot = NULL, sp = NULL, variable = NULL,    col.ind = rgb(0.5, 0.5, 0.5, 0.5), col.pop = NULL, col.sp = NULL,    col.site = NULL, resume =  FALSE, p.val = 0.05, min.ind.signif = 10,    multipanel = TRUE, col.nonsignif.lm = rgb(0, 0, 0, 0.5),    col.signif.lm = rgb(1, 0.1, 0.1, 0.8), silent =  FALSE)"},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot populations values against species values — plotSpVar","text":"traits Individual Matrix traits traits columns. ind.plot Factor defining name plot individual . sp Factor defining species individual belong . variable matrix variables corresponding site (rows) trait (columns). \t\twant plot traits one variable, variable can vector numerical values. col.ind Color individual values. col.pop Color populational mean values. col.sp Color species mean values. col.site Color sites mean values. resume Logical, TRUE plot simple form plot. p.val Choosen p.value print significant linear relationship using linear model. Argument past lm funtion internally. min.ind.signif Minimum individual print significant linear relationship. multipanel Logical value. TRUE divides device shown several traits graphics device. col.nonsignif.lm Color non significant linear relationship. col.signif.lm Color significant linear relationship. silent Logical value, resume = FALSE print warning argument.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot populations values against species values — plotSpVar","text":"None; used side-effect producing plot.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot populations values against species values — plotSpVar","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/plotSpVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot populations values against species values — plotSpVar","text":"","code":"data(finch.ind)      #Random variable for this example   variable <- c(1,5,15,6,3,25)   if (FALSE) { # \\dontrun{   plotSpVar(traits.finch, ind.plot.finch, sp.finch, variable,    silent = TRUE)    #If we change the value of the threshold    #(alpha = 10% instead of 5%    #and the minimum individual to represent significativity    #fixed to 3 instead of 10 by default)    #we can see some significant relationships.    plotSpVar(traits.finch, ind.plot.finch, sp.finch, variable,    p.val = 0.1,  min.ind.signif = 3, silent = TRUE)     #For a more simple figure, add the option resume = TRUE.    #Again if we change the value of the threshold    #(alpha = 10% instead of 5%    #and the minimum individual to represent significativity   # fixed to 3 instead of 10 by default)    #we can see some significant relationships.    plotSpVar(traits.finch, ind.plot.finch, sp.finch, variable,    silent = TRUE, resume = TRUE, col.pop = \"grey\")      plotSpVar(traits.finch, ind.plot.finch, sp.finch, variable,    silent = TRUE, resume = TRUE, col.pop = \"grey\", col.sp = \"black\")      plotSpVar(traits.finch, ind.plot.finch, sp.finch, variable,    silent = TRUE, resume = TRUE, col.pop = \"grey\", col.sp = \"black\",    p.val = 0.1,  min.ind.signif = 3) } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling subset of data. — samplingSubsetData","title":"Sampling subset of data. — samplingSubsetData","text":"Sampling subset data.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling subset of data. — samplingSubsetData","text":"","code":"samplingSubsetData(d = NULL, sampUnit = NULL, nperm = 9,    type = \"proportion\", prop = seq(10, 100, by = 10), MinSample = 1,   Size = NULL)"},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling subset of data. — samplingSubsetData","text":"d Dataframe data sample. line individual. sampUnit Factor defining sampling unit impoverish. example can species plot attributes individual. nperm Number permutations. type Type sampling. Either proportion, count, propBySize factorBySize. See details. prop Integer 1 100. Categorical proportions sample percentage. MinSample Minimum number individual sample sample unit. Default one. Size vector value individual (type propBySize factorBySize) level factor (factorBySize ). Determine rank individual/factor using sampling schemes propBySize factorBySize.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sampling subset of data. — samplingSubsetData","text":"Sampling scheme count sample number individuals wheras proportion sample proportion individuals sample unit. Sampling scheme propBySize sample sampling unit (sampUnit) proportion individual ranked using argument Size. Consequently, bigest individuals (higher Size) sample smaller one. factorBySize sample proportion sampling unit (sampUnit) ranked using argument Size. example can sample individuals 20% aboundant species.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling subset of data. — samplingSubsetData","text":"Return list list sample dataframe. first level list depicts permutation second level depicts different proportion/number individual sampled factor.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/samplingSubsetData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling subset of data. — samplingSubsetData","text":"Adrien Taudiere","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized effect size and confidence interval for a matrix of statistics — ses","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"calculation standardized effect size confidence interval matrix statistics related null model expressed list array. Internal function use functions package. can transpose observed matrix represent either SES traits plots.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"","code":"ses(obs = NULL, nullmodel = NULL, val.quant = c(0.025, 0.975))"},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"obs Observed matrix vector values. nullmodel Either list array three (two vector observed values) dimensions corresponding null model permutations. val.quant Numeric vectors length 2, giving quantile calculation confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"Warning: detect automatically correspondence dimension observed matrix null model list array, observed matrix needs different numbers rows columns. case row column number, please verify manually correspondance beatween rows observed matrix null model array.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"list three components: $ses Observed value standardized effect size. $ses.inf Lower limit confidence interval. $ses.sup Upper limit confidence interval.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"Adrien Taudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/ses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized effect size and confidence interval for a matrix of statistics — ses","text":"","code":"data(finch.ind)      res.finch <- Tstats(traits.finch, ind.plot = ind.plot.finch,    sp = sp.finch, nperm = 9) #> Warning: This function exclude 1137 Na values #> [1] \"creating null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\" #> [1] \"calculation of Tstats using null models\" #> [1] \"8.33 %\" #> [1] \"16.67 %\" #> [1] \"25 %\" #> [1] \"33.33 %\" #> [1] \"41.63 %\" #> [1] \"49.97 %\" #> [1] \"58.3 %\" #> [1] \"66.63 %\" #> [1] \"74.93 %\" #> [1] \"83.27 %\" #> [1] \"91.6 %\" #> [1] \"99.93 %\"   if (FALSE) { # \\dontrun{     ses(res.finch$Tstats$T_IP.IC, res.finch$Tstats$T_IP.IC_nm)   } # }"},{"path":"http://adrientaudiere.github.io/cati/reference/ses.listofindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized effect size for a list of index. — ses.listofindex","title":"Standardized effect size for a list of index. — ses.listofindex","text":"Standardized effect size confidence interval list index.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.listofindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized effect size for a list of index. — ses.listofindex","text":"","code":"ses.listofindex(index.list = NULL, val.quant = c(0.025, 0.975))"},{"path":"http://adrientaudiere.github.io/cati/reference/ses.listofindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized effect size for a list of index. — ses.listofindex","text":"index.list list index obtain using function .listofindex. val.quant Numeric vectors length 2, giving quantile calculation confidence interval. default val.quant = c(0.025,0.975) bilateral test alpha = 5%.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.listofindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized effect size for a list of index. — ses.listofindex","text":"list component correspond result ses function index. , component list three components: $ses Observed value standardized effect size. $ses.inf Lower limit confidence interval. $ses.sup Upper limit confidence interval.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/ses.listofindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized effect size for a list of index. — ses.listofindex","text":"Adrien\tTaudiere","code":""},{"path":[]},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"function decomposes variation trait values within community three sources: () intraspecific trait variability, (ii) \tvariability due species turnover (iii) covariation also separated. decomposition computed whole variation trait \tvalues , formula specified, across contribution various explanatory variables considered model. S3 method plot summarizes graphically decomposition trait variation, obtained traitflex.anova function. Print S3 method object class traitflex.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"","code":"traitflex.anova(formula, specif.avg, const.avg, ...)   # S3 method for class 'traitflex' plot(x, plot.total =  FALSE, use.percentage = TRUE,    plot.covar =  FALSE, cumul =  FALSE,    legend.pos = if (plot.total) \"topleft\" else \"topright\",    plot.res = TRUE, ...)      # S3 method for class 'traitflex' print(x, ...)"},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"formula formula parameter must one-sided formula, .e. starting tilde character. response variable specified next two arguments, specif.avg const.avg. specif.avg Vector community trait composition values single trait. calculated trait values specific community (.e. trait values individual species 'specific' plot, habitat, species found) const.avg Vector community trait composition values single trait. calculated average (fixed) trait values individual species (.e. fixed trait value individual species used habitats species found) x object class traitflex. plot.total Logical value; TRUE plot individual components variation, also total variation. useful particularly decomposition done non-trivial formula (.e. explanatory variables) use.percentage Logical value; TRUE individual plotted sources trait variation shown percentages total variation, 0-100 scale. plot.covar Logical value; TRUE covariance within-species trait variability variability due species composition turnover plotted yet another category within stacked bars. plot.covar argument entirely ignored plotting traitflex object fitted formula without predictor variables. cumul Logical value; TRUE values shown cumulative way. legend.pos argument allows specify position graph legend. Thus argument entirely ignored plotting traitflex object created formula without predictors plot.res Logical value; resume = FALSE plot shown table values used print plot return. ... Optional additional arguments.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"formula parameter must one-sided formula, .e. starting tilde character. response variable specified next two arguments, specif.avg const.avg.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"object class traitflex. print plot methods available . object contains decomposition sum squares intraspecific variation component, compositional variation component, covariation total SumSq element. data frame multiple rows predictors specified formula argument. RelSumSq element contains table relativized unit row totals. Finally, anova.turnover, anova.total, anova.diff elements contain three aov objects used decompose variation.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"Leps, Jan, Francesco de Bello, Petr Smilauer Jiri Dolezal. 2011. Community trait response environment: disentangling species turnover vs intraspecific trait variability effects. Ecography 34 (5): 856-863.","code":""},{"path":"http://adrientaudiere.github.io/cati/reference/traitflex.anova.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance decomposition for a given trait used in decompCTRE — traitflex.anova","text":"Jan Leps et al., 2011 modified Adrien Taudiere","code":""},{"path":[]}]
